import { GoogleGenAI } from "@google/genai";
import type { CharacterProfile } from '../types';
import { UNIVERSE_DATA } from '../constants';

if (!process.env.API_KEY) {
  throw new Error("API_KEY environment variable not set");
}

const ai = new GoogleGenAI({ apiKey: process.env.API_KEY });

const buildPrompt = (profile: CharacterProfile): string => {
  const { name, universe, characterClass, race, gender, keyFeature } = profile;
  const universeStyle = UNIVERSE_DATA[universe].style;
  
  return `Character portrait from the ${universe} universe of a ${gender} ${race} ${characterClass} named "${name}".
Key feature: ${keyFeature}.
Style: ${universeStyle}, character concept art, detailed, focused on the face and upper body. No text, watermarks, or signatures.`;
};

export const generateCharacterPortrait = async (profile: CharacterProfile): Promise<string> => {
  try {
    const prompt = buildPrompt(profile);
    console.log("Generating with prompt:", prompt);
    
    const response = await ai.models.generateImages({
        model: 'imagen-3.0-generate-002',
        prompt: prompt,
        config: { numberOfImages: 1, outputMimeType: 'image/jpeg' },
    });
    
    if (response.generatedImages && response.generatedImages.length > 0) {
      const base64ImageBytes: string = response.generatedImages[0].image.imageBytes;
      return `data:image/jpeg;base64,${base64ImageBytes}`;
    } else {
      throw new Error("No image was generated by the API.");
    }
  } catch (error) {
    console.error("Error generating character portrait:", error);
    if (error instanceof Error) {
        throw new Error(`Failed to generate portrait: ${error.message}`);
    }
    throw new Error("An unknown error occurred during image generation.");
  }
};
